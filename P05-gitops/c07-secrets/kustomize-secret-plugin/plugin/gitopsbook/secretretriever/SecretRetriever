#!/bin/bash

# This is an implementation of a simple secret generator kustomize exec plugin.
# This plugin pretends to retrieve a secret from a given key. In reality, it will use a
# a hardwired value, but it will parse the configuration and use the specified key name as the
# key in the kubernetes Secret. It will also name the secret the same name as configuration.

# The first argument to a kustomize plugin, is actually the path to the config referenced in
# the kustomization.yaml. The following line will grab its contents.
config=$(cat $1)

# Parse the config, and use the name of the config as the name of the resulting K8s Secret
secretName=$(echo "$config" | grep "name:" | awk -F: '{print $2}')
# Parse the keyName from the config, and use it as a key in the K8s Secret
keyName=$(echo "$config" | grep "keyName:" | awk -F: '{print $2}')

# For demo purposes, we use a hard-wired value. But this would typically be replaced with
# logic which retrieves, decrypts secrets.
password="Pa55w0rd!"
# For example, the following line would retrieve a secret from vault using the valut CLI
# password=$(vault kv get -field foo secret/hello)

# Kubernetes secrets need to be base64 encoded
base64password=$(echo -n $password | base64)

# Print the secret to standard out
echo "
kind: Secret
apiVersion: v1
metadata:
  name: $secretName
data:
  $keyName: $base64password
"
